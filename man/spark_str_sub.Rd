% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spark_str_sub.R
\name{spark_str_sub}
\alias{spark_str_sub}
\title{Extract substrings from a Spark DataFrame's column.}
\usage{
spark_str_sub(base, column, start = 1L, end = -1L)
}
\arguments{
\item{base}{A Spark DataFrame.}

\item{column}{A column in the Spark DataFrame.}

\item{start, end}{Two integer vectors that give the position of the first character (defaults to first) and the last (defaults to last character), respectively.

Negative values count backwards from the last character.}
}
\value{
A new column called 'result' in the same Spark DataFrame with the changes desired upon the column given previously.
}
\description{
str_sub will recycle all arguments to be the same length as the longest argument. If any arguments are of length 0, the output will be a zero length character vector.
}
\details{
Substrings are inclusive - they include the characters at both start and end positions. \code{spark_str_sub(string, 1, -1)} will return the complete substring, from the first character to the last.
}
\examples{
iris_tbl <- copy_to(sc, iris, overwrite = TRUE)

spark_str_sub(iris_tbl, 'Species', 1, 3)
}
